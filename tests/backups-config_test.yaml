---
suite: Backups configurations
tests:
  - it: should not render the CronJob when backup is disabled
    set:
      backup:
        enabled: false
    template: backup/cron.yaml
    asserts:
      - hasDocuments:
          count: 0

  - it: should not render the PVC when backup is disabled
    templates:
      - backup/pvc.yaml
    asserts:
      - hasDocuments:
          count: 0

  - it: should render secrets for backup
    values:
      - ./values/backup.yaml
    template: secrets.yaml
    asserts:
      - equal:
          path: metadata.name
          value: RELEASE-NAME-mongodb-backup-secrets
        documentIndex: 1
      - equal:
          path: stringData.s3_access_key
          value: "ak"
        documentIndex: 1
      - equal:
          path: stringData.s3_secret_key
          value: "as"
        documentIndex: 1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-mongodb-my-secret
        documentIndex: 2
      - isNotEmpty:
          path: data.dockerconfigjson
        documentIndex: 2

  - it: should render CronJob when backup are enabled
    values:
      - ./values/backup.yaml
    template: backup/cron.yaml
    asserts:
      - isKind:
          of: CronJob
      - isNotEmpty:
          path: metadata.labels
      - isSubset:
          path: metadata.labels
          content:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: mongodb
            app.kubernetes.io/version: 0.12.0
            helm.sh/chart: mongodb-0.1.0
      - equal:
          path: metadata.name
          value: RELEASE-NAME-mongodb-mongodump
      - equal:
          path: spec.schedule
          value: "*/15 * * * *"
      - equal:
          path: spec.timeZone
          value: "Europe/Paris"
      - equal:
          path: spec.concurrencyPolicy
          value: "Allow"
      - equal:
          path: spec.failedJobsHistoryLimit
          value: 3
      - equal:
          path: spec.successfulJobsHistoryLimit
          value: 2
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].image
          value: "mongo-backup:latest"
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.name
          value: "connection-string-secret"
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].env[2].value
          value: "example-mongodb-svc.NAMESPACE.svc.cluster.local"
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].env[5].value
          value: "/backup"
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].env[6].value
          value: "Europe/Paris"
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].env[7].name
          value: "MY_ENV_VAR"
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].env[7].value
          value: "my_value"
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].env[8]
          value:
            name: S3_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-mongodb-backup-secrets
                key: s3_access_key
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].env[9]
          value:
            name: S3_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-mongodb-backup-secrets
                key: s3_secret_key


  - it: should correctly render imagePullSecrets
    template: backup/cron.yaml
    values:
      - ./values/backup.yaml
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.imagePullSecrets[0].name
          value: "RELEASE-NAME-mongodb-my-secret"

  - it: should correctly apply securityContext if enabled
    template: backup/cron.yaml
    set:
      backup:
        enabled: true
        cronjob:
          containerSecurityContext:
            enabled: true
            runAsUser: 1000
            runAsGroup: 1000
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].securityContext.runAsUser
          value: 1000
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].securityContext.runAsGroup
          value: 1000

  - it: should render the PVC when backup is enabled
    templates:
      - backup/pvc.yaml
    values:
      - ./values/backup.yaml
    set:
      backup:
        cronjob:
          storage:
            accessModes:
              - "ReadWriteOnce"
    asserts:
      - equal:
          path: metadata.name
          value: "RELEASE-NAME-mongodb-mongodump"
      - equal:
          path: metadata.labels["app.kubernetes.io/component"]
          value: "mongodump"
      - equal:
          path: metadata.annotations["helm.sh/resource-policy"]
          value: "keep"
      - equal:
          path: spec.accessModes[0]
          value: "ReadWriteOnce"
      - equal:
          path: spec.resources.requests.storage
          value: "20Gi"

  - it: should correctly apply multiple accessModes
    templates:
      - backup/pvc.yaml
    values:
      - ./values/backup.yaml
    set:
      backup:
        cronjob:
          storage:
            accessModes:
              - "ReadWriteMany"
              - "ReadOnlyMany"
    asserts:
      - equal:
          path: spec.accessModes[0]
          value: "ReadWriteMany"
      - equal:
          path: spec.accessModes[1]
          value: "ReadOnlyMany"
      - equal:
          path: spec.resources.requests.storage
          value: "20Gi"
