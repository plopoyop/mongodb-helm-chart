{{- $fullName := include "mongodb.fullname" . -}}
{{- if .Values.backup.enabled }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "mongodb.fullname" . }}-mongodump
  labels:
    app.kubernetes.io/component: mongodump
    {{- include "mongodb.labels" . | nindent 4 }}
  {{- if .Values.backup.cronjob.annotations }}
  annotations:
    {{- with .Values.backup.cronjob.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  schedule: {{ quote .Values.backup.cronjob.schedule }}
  timeZone: {{ quote .Values.backup.cronjob.timeZone }}
  concurrencyPolicy: {{ .Values.backup.cronjob.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ .Values.backup.cronjob.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ .Values.backup.cronjob.successfulJobsHistoryLimit }}
  {{- if .Values.backup.cronjob.startingDeadlineSeconds }}
  startingDeadlineSeconds: {{ .Values.backup.cronjob.startingDeadlineSeconds }}
  {{- end }}
  jobTemplate:
    spec:
      {{- if .Values.backup.cronjob.backoffLimit }}
      backoffLimit: {{ .Values.backup.cronjob.backoffLimit }}
      {{- end }}
      {{- if .Values.backup.cronjob.ttlSecondsAfterFinished }}
      ttlSecondsAfterFinished: {{ .Values.backup.cronjob.ttlSecondsAfterFinished }}
      {{- end }}
      template:
        metadata:
          labels:
          {{- include "mongodb.labels" . | nindent 12 }}
            app.kubernetes.io/component: mongodump
          {{- if .Values.backup.cronjob.annotations }}
          annotations:
            {{- with .Values.backup.cronjob.annotations }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
        spec:
          {{- range .Values.backup.cronjob.imagePullSecrets }}
          imagePullSecrets:
            - name:  {{ $fullName }}-{{ .name }}
          {{- end }}

          initContainers:
            - name: init-volume
              image: bash
              command: ['bash', '-c', 'chmod 777 {{ .Values.backup.cronjob.storage.mountPath }}']
              volumeMounts:
                - mountPath: {{ .Values.backup.cronjob.storage.mountPath }}
                  name: datadir

          containers:
          - name: {{ include "mongodb.fullname" . }}-mongodump
            image: "{{ .Values.backup.cronjob.image.repository }}:{{ .Values.backup.cronjob.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.backup.cronjob.image.pullPolicy | quote }}
            env:
              - name: USERNAME
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.connectionStringSecretName | quote }}
                    key: username
              - name: PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.connectionStringSecretName | quote }}
                    key: password
              - name: HOST
                value: {{ .Values.name }}-svc.{{ .Release.Namespace }}.svc.cluster.local
              - name: REPLICATSET
                value: {{ .Values.name }}
              - name: PORT
                value: "27017"
              - name: STORAGE_PATH
                value: {{ .Values.backup.cronjob.storage.mountPath }}
              - name: TZ
                value: {{ .Values.backup.cronjob.timeZone }}
              {{- with .Values.backup.cronjob.container_env }}
              {{- toYaml . | nindent 14 }}
              {{- end }}

              {{- range .Values.backup.cronjob.container_secret_env }}
              - name: {{ .name }}
                valueFrom:
                  secretKeyRef:
                    name: {{ $fullName }}-backup-secrets
                    key: {{ .secret_key }}
              {{- end }}


            {{- if .Values.backup.cronjob.command }}
            command:
              {{- with .Values.backup.cronjob.command }}
              {{- toYaml . | nindent 14 }}
              {{- end }}
            {{- else }}
            command:
              - /bin/sh
              - -c
              - "mongodump {{- if .Values.connectionStringSecretName }}  {{- end }} ${MONGO_CONNECTION_STRING} ${MONGODB_CLIENT_EXTRA_FLAGS} --gzip --archive=${MONGODUMP_DIR}/mongodump-$(date '+%Y-%m-%d-%H-%M').gz"
            {{- end }}
            volumeMounts:
              - name: empty-dir
                mountPath: /tmp
                subPath: tmp-dir
              - name: datadir
                mountPath: {{ .Values.backup.cronjob.storage.mountPath }}
                subPath: {{ .Values.backup.cronjob.storage.subPath }}
            {{- if .Values.backup.cronjob.containerSecurityContext.enabled }}
            securityContext:
              {{- toYaml .Values.backup.cronjob.containerSecurityContext | nindent 14 }}
            {{- end }}
          restartPolicy: {{ .Values.backup.cronjob.restartPolicy }}
          volumes:
            - name: empty-dir
              emptyDir: {}
            - name: common-scripts
              configMap:
                name: {{ printf "%s-common-scripts" (include "mongodb.fullname" .) }}
                defaultMode: 0550
            {{- if .Values.backup.cronjob.storage.existingClaim }}
            - name: datadir
              persistentVolumeClaim:
                claimName: {{ printf "%s" (tpl .Values.backup.cronjob.storage.existingClaim .) }}
            {{- else }}
            - name: datadir
              persistentVolumeClaim:
                claimName: {{ include "mongodb.fullname" . }}-mongodump
            {{- end }}
{{- end }}
